[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file

[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket



[program:flask_app]
command=python run.py
autostart=false
autorestart=true
stdout_logfile=super.log     ; stdout log path, NONE for none; default AUTO
stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stdout_events_enabled=false   ; emit events on stdout writes (default false)
stdout_syslog=false           ; send stdout to syslog with process name (default false)
stderr_logfile=super.log      ; stderr log path, NONE for none; default AUTO
stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
stderr_events_enabled=false   ; emit events on stderr writes (default false)
stderr_syslog=false
;stopsignal=STOPFLASK

; [program:rabbitmq_app]
; command=bash -c "echo Hello world!"
; ; command=bash -c "cd file_generation_repo && cd rabbitmq_folder && python consumer.py"
; autostart=true
; autorestart=true
; stdout_logfile=super.log     ; stdout log path, NONE for none; default AUTO
; stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
; stdout_logfile_backups=10     ; # of stdout logfile backups (0 means none, default 10)
; stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
; stdout_events_enabled=false   ; emit events on stdout writes (default false)
; stdout_syslog=false           ; send stdout to syslog with process name (default false)
; stderr_logfile=super.log      ; stderr log path, NONE for none; default AUTO
; stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
; stderr_logfile_backups=10     ; # of stderr logfile backups (0 means none, default 10)
; stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
; stderr_events_enabled=false   ; emit events on stderr writes (default false)
; stderr_syslog=false
; ; ;stopsignal=STOPRABBIT
